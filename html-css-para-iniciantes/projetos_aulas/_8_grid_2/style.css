/* grid-template-columns:repeat(20, 1fr) | grid-template-rows:repeat(20, 1fr)
    repete 20x a coluna/linha 1fr, então em vez de colocar manualmente lado a lado 20x, vc pode usar o repeat */

/* grid-auto-rows: 200px;
    define que toda linha nova que for criada terá o tamanho de 200px*/

/* grid-template-rows
    propriedade que trata as linhas
    por padrão, toda linha é criada como auto*/

/* grid-template-columns: 2fr 1fr;
    grid-auto-rows: 200px;
    é possível empilhar essas duas propriedades, então se eu definir da forma como está acima, a primeira linha terá 2fr, a segunda linha 1fr e todas as que forem criadas depois terão 200px*/

/* grid-column: 2; --> controla a coluna que o elemento vai ficar, no caso, linha 2
    grid-row: 3; --> controla a linha que o elemento vai ficar, no caso, linha 3
    grid-area: 2 / 3;
    combinação dos dois de cima*/

/*No fim da aula ele explica que a forma como foi feita aqui, tanto css quanto html, não é a melhor. Tem como deixar da mesma forma a estrutura alterando o html e reduzindo o css, aqui foi mais para explicar as propriedades*/

.grid {
  display: grid;
  gap: 20px;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(3, auto) 1fr;
  place-items: start;
}

.titulo {
  grid-column: 1/-1;
}

.comprar {
  grid-column: 2;
}

.foto {
  grid-column: 1;
  grid-row: 2/5;
}

/* Estilos Gerais */

body {
  font-family: Arial;
  margin: 40px;
}

h1,
p {
  margin: 0px;
}

h1 {
  font-size: 48px;
  line-height: 1;
}

p,
span {
  font-size: 20px;
}

img {
  max-width: 100%;
}

.comprar {
  background: #a8f;
  padding: 10px 20px;
  color: #103;
  text-decoration: none;
  border-radius: 4px;
}

.preco {
  background: #ddd;
  padding: 5px 10px;
  border-radius: 4px;
}
