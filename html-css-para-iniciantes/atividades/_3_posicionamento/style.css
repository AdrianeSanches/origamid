/*
  Essa atividade ainda não trabalha com responsividade
  
  font-family: Arial, Helvetica, sans-serif;
    ele coloca mais opções por dafault, para caso o computador que está entrando na página não tenha Arial, ele vai tentar renderizar a próxima tipografia, que no caso é a Helvetica, e assim por diante.

  .detalhe
    um elemento span tem como default o display inline, um elemento com display inline não é possível atribuir altura e largura para ele, por conta disso, o display foi para inline-block

  .rodape --> informação sobre width, padding e box-sizing
*/

body {
  font-family: Arial, Helvetica, sans-serif;
  margin: 0;
  background: #f7f7f7;
  display: grid;
  gap: 60px;
  justify-items: center;
  margin-top: 60px;
}

img {
  max-width: 100%;
  display: block;
}

a {
  text-decoration: none;
}

p,
h1,
h2,
h3 {
  margin: 0px;
}

p {
  font-size: 20px;
  line-height: 1.3;
}

.menu {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px;
}

.menu a {
  background: #ffffff;
  padding: 15px 30px;
  border-radius: 4px;
  color: #000000;
  text-transform: uppercase;
}

.conteudo {
  display: grid;
  grid-template-columns: 1fr 1fr;
  max-width: 1000px;
}

.introducao {
  background: #fff;
  padding: 40px;
  text-align: right;
  position: relative;
  display: grid;
  gap: 20px;
  align-content: center;
  justify-items: end;
}

.detalhe {
  width: 60px;
  height: 4px;
  background: #e21;
  /* display: inline-block; --> como o elemento pai (.introducao) agora tem o display grid, os elementos dentro dele agora se comportarão como blocos, tirando a necessidade de incluir o display: inline-block neste elemento */
  position: absolute;
  top: 30px;
  right: -30px;
}

.botao {
  background: #ee2211;
  color: #fff;
  padding: 15px 30px;
  border-radius: 4px;
  text-transform: uppercase;
}

.subtitulo {
  font-size: 64px;
  text-transform: uppercase;
  color: rgba(0, 0, 0, 0.2);
  text-align: right;
  padding: 40px;
  align-self: center;
}

.vantagens {
  background: #fff;
  padding: 40px;
}

.vantagens-item {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 10px 20px;
  padding: 20px;
}

.vantagens-item p {
  grid-column: 2;
}

.rodape {
  background: #fff;
  width: 100%;
  text-align: center;
  padding: 40px;

  /* se deixamos como está e voltamos no navegador, observamos que ele cria um scroll na horizontal, isso porque nessa estrutura ele soma a largura do rodape, sendo 100% do width + 80px do padding
  para evitar que ele some as propriedades e considere apenas o 100% do width, acrecentamos a propriedade box-sizing: border-box; */

  box-sizing: border-box;
}
